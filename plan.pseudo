a_1 = AG1.src()
xs_1 = AG1.op(a_1, param2=42)
crossing_info_1 = CONST.value(value=null)
iter_1 = ITER.eval(xs_1, expr="xs", kind="for", target="x")
x_1@loop1 = ITER.item(iter_1, target="x")
call_1@loop1 = AG3.proc(x_1@loop1)
crossed_1@loop1 = AG4.op2(x_1@loop1)
cond_1@loop1 = COND.eval(crossed_1@loop1, expr="not crossed", kind="if")
approx_time_1@loop1 = AG3.op(x_1@loop1)
data_1@loop1 = AG4.op(approx_time_1@loop1)
lat_1@loop1 = GET.item(data_1@loop1, key="sensor_lat")
lon_1@loop1 = GET.item(data_1@loop1, key="sensor_lon")
call_2@loop1 = AG4.proc(approx_time_1@loop1)
crossing_info_field_1@loop1 = AG5.op3(approx_time_1@loop1)
crossing_info_2@loop1 = PACK.dict(approx_time_1@loop1, crossing_info_field_1@loop1, x_1@loop1, lat_1@loop1, lon_1@loop1, keys=["approx_time", "details", "item", "lat", "lon"])
break_1@loop1 = CTRL.break()
foreach_1 = COMP.foreach(xs_1, target="x")
crossing_info_2 = PHI(crossing_info_1, crossing_info_2@loop1, var="crossing_info")

output(crossing_info_2, as="return")
